version: "3.3"

# TODO: Separate files for development, testing and production

services:
  web:
    # TODO: Build web image using a building service (like docker hub)
    # image: 
    build:  
      context: .
    depends_on: 
      - db
    restart: always
    environment: 
      - DJANGO_SECRET_KEY
      - DJANGO_DB_NAME
      - DJANGO_DB_USER
      - DJANGO_DB_PASSWORD
      - DJANGO_DB_HOST
      - DJANGO_DB_PORT
    volumes:
      - ./django:/ceiss_backend/django # Comment this line on swarm mode
      - static_volume:/ceiss_backend/django/static_files
      - gunicorn_socket:/ceiss_backend/django/run
    command: >
      sh -c "./scripts/gunicorn_start.sh"
    deploy:
      restart_policy:
        condition: on-failure
      mode: replicated
      replicas: 3
    networks: 
      - ceiss_network
  db:
    image: postgres:10.5-alpine
    environment: 
      - POSTGRES_USER
      - POSTGRES_DB
      - POSTGRESS_PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data
    deploy:
      restart_policy:
        condition: on-failure
      mode: replicated
      replicas: 1
    networks: 
      - ceiss_network
  nginx:
    # TODO: Build web image using a building service (like docker hub)
    # image: 
    build: ./nginx
    ports:
      - 80:80
    volumes: 
      - static_volume:/static
      - gunicorn_socket:/socket
    depends_on: 
      - web
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
    networks: 
      - ceiss_network
volumes:
  postgres_data:
  static_volume:
  gunicorn_socket:

networks:
  ceiss_network: 